`default_nettype none
`include "defines.sv"

module alu_32 (
  input wire [31:0] a,
  input wire [31:0] b,
  input wire [4:0]  op,
  output logic [31:0] y 
  );

  logic [4:0]         x;
  assign x = b[4:0];  
  
  always_comb begin
    case (op)
      `ALU_OP_PLUS:
        y = a + b;
      `ALU_OP_MINUS:
        y = a - b;
      `ALU_OP_AND:
        y = a & b;
      `ALU_OP_OR:
        y = a | b;
      `ALU_OP_XOR:
        y = a ^ b;
      `ALU_OP_NOT:
        y = ~a;
      `ALU_OP_SLL:
        y = a << x[4:0];
      `ALU_OP_SRL:
        y = a >> x[4:0];
      `ALU_OP_SRA:
        y = $signed(a) >>> x[4:0];
      `ALU_OP_ROL:
        y = (a << x) | (a >> ((~x) + 4'd1));
      `ALU_OP_SEL_B: // used as a mux, used in lui.
        y = b;
      `ALU_OP_SEL_A:
        y = a;
      `ALU_OP_BIT_CLEAR:
        y = ~a & b;
      `ALU_OP_SLTU:
        y = a < b ? 32'b1 : 32'b0;
      `ALU_OP_SLT:
        y = $signed(a) < $signed(b) ? 32'b1 : 32'b0;
      `ALU_OP_CTZ: begin
        casez (a)
          32'b????_????_????_????_????_????_????_???1: y = 32'd0;
          32'b????_????_????_????_????_????_????_??10: y = 32'd1;
          32'b????_????_????_????_????_????_????_?100: y = 32'd2;
          32'b????_????_????_????_????_????_????_1000: y = 32'd3;
          32'b????_????_????_????_????_????_???1_0000: y = 32'd4;
          32'b????_????_????_????_????_????_??10_0000: y = 32'd5;
          32'b????_????_????_????_????_????_?100_0000: y = 32'd6;
          32'b????_????_????_????_????_????_1000_0000: y = 32'd7;
          32'b????_????_????_????_????_???1_0000_0000: y = 32'd8;
          32'b????_????_????_????_????_??10_0000_0000: y = 32'd9;
          32'b????_????_????_????_????_?100_0000_0000: y = 32'd10;
          32'b????_????_????_????_????_1000_0000_0000: y = 32'd11;
          32'b????_????_????_????_???1_0000_0000_0000: y = 32'd12;
          32'b????_????_????_????_??10_0000_0000_0000: y = 32'd13;
          32'b????_????_????_????_?100_0000_0000_0000: y = 32'd14;
          32'b????_????_????_????_1000_0000_0000_0000: y = 32'd15;
          32'b????_????_????_???1_0000_0000_0000_0000: y = 32'd16;
          32'b????_????_????_??10_0000_0000_0000_0000: y = 32'd17;
          32'b????_????_????_?100_0000_0000_0000_0000: y = 32'd18;
          32'b????_????_????_1000_0000_0000_0000_0000: y = 32'd19;
          32'b????_????_???1_0000_0000_0000_0000_0000: y = 32'd20;
          32'b????_????_??10_0000_0000_0000_0000_0000: y = 32'd21;
          32'b????_????_?100_0000_0000_0000_0000_0000: y = 32'd22;
          32'b????_????_1000_0000_0000_0000_0000_0000: y = 32'd23;
          32'b????_???1_0000_0000_0000_0000_0000_0000: y = 32'd24;
          32'b????_??10_0000_0000_0000_0000_0000_0000: y = 32'd25;
          32'b????_?100_0000_0000_0000_0000_0000_0000: y = 32'd26;
          32'b????_1000_0000_0000_0000_0000_0000_0000: y = 32'd27;
          32'b???1_0000_0000_0000_0000_0000_0000_0000: y = 32'd28;
          32'b??10_0000_0000_0000_0000_0000_0000_0000: y = 32'd29;
          32'b?100_0000_0000_0000_0000_0000_0000_0000: y = 32'd30;
          32'b1000_0000_0000_0000_0000_0000_0000_0000: y = 32'd31;
          default: y = 32'd32;
        endcase
      end
      `ALU_OP_MIN: begin
        y = $signed(a) < $signed(b) ? a : b;
      end
      `ALU_OP_ANDN: begin
        y = a & ~b;
      end
      default:
        y = 32'b0;
      
    endcase
  end;  
endmodule // alu_32